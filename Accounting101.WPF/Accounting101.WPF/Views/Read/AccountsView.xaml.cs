using System.ComponentModel;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Media;
using Accounting101.WPF.Models;
using Accounting101.WPF.ValueConverters;
using Accounting101.WPF.ViewModels.Read;
using DataAccess.WPF.Models;
using DataAccess.WPF.Services.Interfaces;
using Microsoft.VisualStudio.Threading;

#pragma warning disable CS8602 // Dereference of a possibly null reference.

namespace Accounting101.WPF.Views.Read;

public partial class AccountsView
{
    public bool HasAccounts => _viewModel.HasAccounts;

    private readonly AccountsViewModel _viewModel = new();
    private readonly Brush _focusColor = Brushes.LightSlateGray;
    private readonly Binding _sbBinding = new("StartBalance") { Converter = new DecimalToAccountingStringConverter() };
    private readonly Binding _cbBinding = new("CurrentBalance") { Converter = new DecimalToAccountingStringConverter() };

    public AccountsView()
    {
        DataContext = _viewModel;
        InitializeComponent();
    }

    public void SetInfo(IDataStore dataStore, JoinableTaskFactory taskFactory, ClientWithInfo client)
    {
        _viewModel.SetInfo(dataStore, taskFactory, client);
    }

    private void DataGridAutoGeneratingColumn(object? sender, DataGridAutoGeneratingColumnEventArgs e)
    {
        PropertyDescriptor propertyDescriptor = (PropertyDescriptor)e.PropertyDescriptor;
        e.Column.Header = propertyDescriptor.DisplayName;
        if (propertyDescriptor.DisplayName == "Id")
        {
            e.Cancel = true;
        }

        switch (propertyDescriptor.DisplayName)
        {
            case "StartBalance":
                e.Column.Header = "Start Balance";
                break;

            case "CurrentBalance":
                e.Column.Header = "Current Balance";
                break;
        }
    }

    private void AccountListLoadingRow(object? sender, DataGridRowEventArgs e)
    {
        e.Row.Background = Brushes.Transparent;
        e.Row.MouseEnter += (_, _) =>
        {
            e.Row.Background = _focusColor;
        };
        e.Row.MouseLeave += (_, _) =>
        {
            e.Row.Background = Brushes.Transparent;
        };
        e.Row.PreviewMouseDown += (_, _) =>
        {
            Guid accountId = ((AccountsViewLine)e.Row.Item).Id;
            _viewModel.ItemSelected(accountId);
        };
    }

    private void DataGridAutoGeneratedColumns(object? sender, EventArgs e)
    {
        if (sender is not DataGrid { Columns.Count: > 0 } dataGrid)
        {
            return;
        }

        DataGridColumn? sbColumn = dataGrid.Columns.FirstOrDefault(c => c.Header.ToString() == "Start Balance");
        DataGridColumn? cbColumn = dataGrid.Columns.FirstOrDefault(c => c.Header.ToString() == "Current Balance");

        (sbColumn as DataGridTextColumn).Binding = _sbBinding;
        (cbColumn as DataGridTextColumn).Binding = _cbBinding;

        Style style = new(typeof(DataGridCell), sbColumn.CellStyle);
        style.Setters.Add(new Setter
        {
            Property = HorizontalContentAlignmentProperty,
            Value = HorizontalAlignment.Right
        });

        sbColumn.CellStyle = style;
        cbColumn.CellStyle = style;
    }
}